[USER_QUESTIONS]
domain_url = https://www.metacritic.com
games_url = /game
platforms = The available platforms are
timeframe = The available time frames to search are:
sort = The available sort options are available:
years = The available years to search are:

[MAIN]
main_menu_list = ['Games by platform', 'Games by genre', 'Games by time frame']
welcome = Welcome user!
farewell = no results found, goodbye!
num_fetch = total results found. How many would you like to fetch?"

[TIMEFRAME]
time_frame_url = /browse/games/score/metascore/all/all/filtered

[SCRAPE_SEARCH_PAGE]
file_name = db.csv

[CHECK_INPUT]
choice = Please enter your choice:
invalid = Invalid integer was given

[MAIN_EVENT]
exclude_legacy = -1

[SCRAPE_PLATFORM]
platforms_table_filename = platforms.csv
platform_id = 0
platform_name = 1
platform_url = 2
articles_table_headers = ['id', 'Title', 'url']
data_folder = ./data/
url_location = 3
article_url_head = https://www.metacritic.com

[SCRAPE_CATEGORY]
games_url = https://www.metacritic.com/game
platform_url_head = https://www.metacritic.com/browse/games/release-date/new-releases/
sorting_options = ['/date', '/metascore']
sort_by_date = 0
sort_by_metascore = 1
platforms_table_filename = platforms.csv
platforms_table_headers = ['id', 'Name', 'url']
get_headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36'}
url_location = -2

[FINAL_DATA_SCRAPE]
header_list = ['name of game', 'main platform', 'publisher', 'release date', 'Other Consoles', 'metascore', 'number of metascore reviewers', 'user score', 'number of user reviews', 'developer', 'num players', 'Genres', 'age rating', 'critic review_positive', 'critic review mixed', 'critic review negative', 'user review positive', 'user review mixed', 'user review negative']

[CREATE_DATABASE]
list_of_tables = CREATE TABLE IF NOT EXISTS Publisher (Publisher_id int AUTO_INCREMENT PRIMARY KEY,         Publisher_name varchar(250), UNIQUE (Publisher_name))&&CREATE TABLE IF NOT EXISTS Developer (Developer_id int AUTO_INCREMENT PRIMARY KEY,         Developer_name varchar(250), UNIQUE (Developer_name))&&CREATE TABLE IF NOT EXISTS Age_Rating (Age_Rating_id int AUTO_INCREMENT PRIMARY KEY,        Age_Rating_name varchar(250), UNIQUE (Age_Rating_name))&&CREATE TABLE IF NOT EXISTS Consoles (Console_id int AUTO_INCREMENT PRIMARY KEY,         Console_name varchar(250), UNIQUE (Console_name))&&CREATE TABLE IF NOT EXISTS Genre (Genre_id int AUTO_INCREMENT PRIMARY KEY,         Genre_name varchar(250), UNIQUE (Genre_name))&&CREATE TABLE IF NOT EXISTS Game(Game_id int AUTO_INCREMENT PRIMARY KEY, Game_name varchar(250) UNIQUE,         Publisher_id int,         Developer_id int, Age_rating_id int, num_players varchar(250), Release_date varchar(250),         FOREIGN KEY(Publisher_id) REFERENCES Publisher(Publisher_id),          FOREIGN KEY(Developer_id) REFERENCES Developer(Developer_id), FOREIGN KEY(Age_rating_id)         REFERENCES Age_Rating(Age_Rating_id)) && CREATE TABLE IF NOT EXISTS game_to_console         ( Game_id INT NOT NULL references Console(Console_id), Console_id INT NOT NULL references Game(Game_id),         PRIMARY KEY(Game_id, Console_id))&& CREATE TABLE IF NOT EXISTS Main_Scores(         Game_id int, Console_id int, Metascore int, Userscore float, Num_Metascore int, num_Userscore int,          FOREIGN KEY(Game_id) REFERENCES Game(Game_id),         FOREIGN KEY(Console_id) REFERENCES Consoles(Console_id))&& CREATE TABLE IF NOT EXISTS PMN_user_scores(         Game_id int, Num_positive int, Num_mixed int, Num_negative int, FOREIGN KEY(Game_id) REFERENCES Game(Game_id))&& CREATE TABLE IF NOT EXISTS PMN_critic_scores(         Game_id int, Num_positive int, Num_mixed int, Num_negative int,FOREIGN KEY(Game_id) REFERENCES Game(Game_id))
list_of_inserts = INSERT INTO Publisher (Publisher_name) VALUE (%%s)&&INSERT INTO Developer (Developer_name) VALUE (%%s)&&INSERT INTO Age_rating (Age_Rating_name) VALUE (%%s)&&INSERT INTO Consoles (Console_name) VALUE (%%s)&&INSERT INTO Genre (Genre_name) VALUE (%%s)&&SELECT Publisher_id FROM Publisher WHERE Publisher_name = %%s&&SELECT Developer_id FROM Developer WHERE Developer_name = %%s&&SELECT Age_Rating_id FROM Age_rating WHERE Age_Rating_name = %%s&&INSERT INTO Game (Game_name, Publisher_id, Developer_id, Age_rating_id, num_players, Release_date) VALUE (%%s,%%s, %%s,%%s, %%s, %%s)&&SELECT Console_id From Consoles WHERE Console_name = %%s&&INSERT INTO game_to_console (Game_id, Console_id) Value (%%s,%%s)&&INSERT INTO main_scores (Game_id, Console_id, Metascore, Userscore, Num_Metascore, num_Userscore) VALUE (%%s,%%s,%%s,%%s,%%s,%%s)&&INSERT INTO PMN_user_scores (Game_id, Num_positive, Num_mixed, Num_negative) VALUES (%%s,%%s,%%s,%%s)&&INSERT INTO PMN_critic_scores (Game_id, Num_positive, Num_mixed, Num_negative) VALUES (%%s,%%s,%%s,%%s)
create_trial = CREATE DATABASE IF NOT EXISTS trial_1
use_trial = USE trial_1
insert_game = INSERT INTO Game (Game_name, Publisher_id, Developer_id, Age_rating_id, num_players, Release_date) VALUE (%%s,%%s, %%s,%%s, %%s, %%s)
insert_main = SELECT Console_id From Consoles WHERE Console_name = %%s
publisher = publisher
developer = developer
age_rating = age rating
main_platfrom = main platform
other_consoles = Other Consoles
genres = Genres
name_of_game = name of game
pub_id = Publisher_id
dev_id = Developer_id
age_id = Age_Rating_id
num_players = num players
rel_date = release date
console_id = Console_id
metascore = metascore
user_score = user score
num_met_rev = number of metascore reviewers
num_user_rev = number of user reviews
user_pos = user review positive
user_mix = user review mixed
user_neg = user review negative
critic_pos = critic review_positive
critic_mix = critic review mixed
critic_neg = critic review negative

